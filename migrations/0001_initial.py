# Generated by Django 2.2.10 on 2020-05-17 17:34

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('scionlab', '0006_pki'),
    ]

    operations = [
        migrations.CreateModel(
            name='IXP',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(blank=True, max_length=255, null=True, verbose_name='Label')),
                ('ip_network', models.CharField(max_length=48)),
            ],
            options={
                'verbose_name': 'IXP',
                'verbose_name_plural': 'IXPs',
            },
        ),
        migrations.CreateModel(
            name='IXPLink',
            fields=[
                ('link_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='scionlab.Link')),
                ('ixp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='links', to='scionlab_ixp.IXP', verbose_name='IXP')),
            ],
            options={
                'verbose_name': 'IXP Link',
            },
            bases=('scionlab.link',),
        ),
        migrations.CreateModel(
            name='IXPMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public_ip', models.GenericIPAddressField()),
                ('bind_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scionlab.Host')),
                ('ixp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scionlab_ixp.IXP', verbose_name='IXP')),
            ],
            options={
                'verbose_name': 'IXP Member',
                'unique_together': {('ixp', 'host')},
            },
        ),
        migrations.CreateModel(
            name='ISDPeerPolicy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deny', models.BooleanField(default=False)),
                ('AS', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scionlab.UserAS')),
                ('ixp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scionlab_ixp.IXP', verbose_name='IXP')),
                ('peer_isd', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='scionlab.ISD', verbose_name='Peer ISD')),
            ],
            options={
                'verbose_name': 'ISD Peering Policy',
                'verbose_name_plural': 'ISD Peering Policies',
                'unique_together': {('ixp', 'AS', 'peer_isd')},
            },
        ),
        migrations.CreateModel(
            name='ASPeerPolicy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deny', models.BooleanField(default=False)),
                ('AS', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scionlab.UserAS')),
                ('ixp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scionlab_ixp.IXP', verbose_name='IXP')),
                ('peer_as', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='scionlab.UserAS', verbose_name='Peer AS')),
            ],
            options={
                'verbose_name': 'AS Peering Policy',
                'verbose_name_plural': 'AS Peering Policies',
                'unique_together': {('ixp', 'AS', 'peer_as')},
            },
        ),
    ]
